import React, { Component } from "react";
import { Link, Navigate } from 'react-router-dom';
import { connect } from 'react-redux'

import Header from "../../component/Header/Header";
import Footer from "../../component/Footer/Footer";

import "./ProductDetail.css";
//import axios from "axios";
import withParams from "../../Helper/withParams";
import withLocation from "../../Helper/withLocation";
import { getProductDetail } from "../../utiliti/product";
import { formater } from "../../Helper/formatNumber";

import {
    counterUp,
    counterDown,
    setDelivery,
    setIdProduct,
    setPictures,
    setName,
    setSize,
    setTime,
    setPrice,
} from "../../redux/actionCreator/cart";
class ProductDetail extends Component {
    constructor(props) {
        super(props);
        this.state = {
            isCheckOut: false,
            // successMsg: "",
            // errorMsg: "",
            token: localStorage.getItem("token"),
            product: {},
        }
    }

    getProductDetailPage = (id) => {
        getProductDetail(id)
            .then((res) => {
                //console.log(res.data.data)
                this.setState({
                    product: res.data.data[0],
                });
            })
            .catch((err) => {
                console.log("ERROR GET PRODUCTS", err);
            });
    };

    setAddCart(event) {
        event.preventDefault();
        //const { getProduct } = this.state.product;
        //console.log(getProduct);
        const {
            //params: { id },
            dispatch,
        } = this.props;
        dispatch(setIdProduct(this.state.product.id));
        dispatch(setPictures(this.state.product.pictures));
        dispatch(setName(this.state.product.name));
        dispatch(setPrice(this.state.product.price));
        dispatch(setSize);
    }

    checkOutHandle = () => {
        const { token } = this.state;
        if (token) {
            this.setState({
                isCheckOut: true,
            });
        }
    };

    componentDidMount() {
        const {
            params: { id }
            //location: { state },
        } = this.props;
        this.getProductDetailPage(id);
    }
    render() {
        const { params, dispatch, qty, size, delivery } = this.props;
        //console.log(qty);
        //const { getProduct } = this.state.product
        if (this.state.isCheckOut) return <Navigate to="/payment" />;
        return (
            <>
                <Header />
                <main>
                    {params.id ? (
                        <form onSubmit={this.setAddCart}>
                        <section className="pd-main-container">
                            <div className="pd-title-menu">
                                <Link to={"/product"}>
                                    {`${this.state.product.category === "non coffee" ? "Non Coffee" : this.state.product.category}`}
                                </Link><span>{`>${this.state.product.name}`}</span></div>
                            <section className="pd-main-content">
                                <div className="pd-left-content">
                                    <div className="pd-main-img-container">
                                        <img src={`http://localhost:8000${this.state.product.pictures}`} alt="coldbrew" className="pd-main-img" />
                                    </div>
                                    <div className="pd-main-product-name">
                                        <h2>{this.state.product.name}</h2>
                                        <p>{`${formater.format(this.state.product.price)}`}</p>
                                    </div>
                                    <button className="pd-addcart-button"
                                        type="submit"
                                    >Add to Cart</button>
                                    <div className="pd-askstaff-button">Ask a Staff</div>
                                </div>
                                <div className="pd-right-content">
                                    <div className="pd-desc-card">
                                        <div className="pd-desc-delivery">
                                            <p>Delivery only on <span>Monday to friday</span>  at <span>{this.state.product.start_hours} am - {this.state.product.end_hours} pm</span> </p>
                                        </div>
                                        <div className="pd-desc-info">
                                            <p>
                                                {this.state.product.description}
                                            </p>
                                        </div>
                                        <div className="pd-choose-size">
                                            <h4 className="pd-size-title">Choose a size</h4>
                                            <div className="pd-size-container">
                                                <label className="pd-size-vector">R
                                                    <input type="radio" className='pd-size-input' name='pd-size-input' value="2"
                                                        onClick={() => {
                                                            dispatch(setSize("Reguler"));
                                                        }}
                                                    /><span className='pd-size-checkmark'></span>
                                                </label>
                                                <label className="pd-size-vector">L
                                                    <input type="radio" className='pd-size-input' name='pd-size-input' value="3"
                                                        onClick={() => {
                                                            dispatch(setSize("Large"));
                                                        }}
                                                    /><span className='pd-size-checkmark'></span>
                                                </label>
                                                <label className="pd-size-vector">XL
                                                    <input type="radio" className='pd-size-input' name='pd-size-input' value="6"
                                                        onClick={() => {
                                                            dispatch(setSize("Extra Large"));
                                                        }}
                                                    /><span className='pd-size-checkmark'></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="pd-delivery-container">
                                        <h4 className="pd-delivery-title">Choose Delivery Methods</h4>
                                        <div className="pd-delivery-button">
                                            <label className="pd-dm-button-inactive">
                                                <input type="radio" name="pd-dm-input" className='pd-dm-input' />
                                                <span className="pd-dm-checkmark"
                                                    value="Dine in"
                                                    // checked={delivery === "Dine in"}
                                                    onClick={() => {
                                                        dispatch(setDelivery("Dine in"));
                                                    }}>Dine in</span></label>
                                            <label className="pd-dm-button-inactive">
                                                <input type="radio" name="pd-dm-input" className='pd-dm-input' />
                                                <span className="pd-dm-checkmark"
                                                    value="Door delivery"
                                                    //checked={delivery === "Door delivery"}
                                                    onClick={() => {
                                                        dispatch(setDelivery("Door delivery"));
                                                    }}>Door Delivery</span></label>
                                            <label className="pd-dm-button-inactive">
                                                <input type="radio" name="pd-dm-input" className='pd-dm-input' />
                                                <span className="pd-dm-checkmark"
                                                    value="Pick up"
                                                    //checked={delivery === "Pick up"}
                                                    onClick={() => {
                                                        dispatch(setDelivery("Pick up"));
                                                    }}>Pick up</span></label>
                                        </div>
                                        <div className="pd-settime">
                                            <label htmlFor="settime">Set time:</label>
                                            <input type="time" className="settime" id="settime" placeholder="Enter the time you'll arrived"
                                                value={this.state.time}
                                                onChange={(event) => {
                                                    dispatch(setTime(event.target.value));
                                                }} />
                                        </div>
                                    </div>
                                </div>
                            </section>
                            <section className="pd-checkout-container">
                                <div className="pd-product-checkout">
                                    <div className="pd-checkout-img">
                                        <img src={`http://localhost:8000${this.state.product.pictures}`} alt="coldbrew" className='pd-check-out-img' />
                                    </div>
                                    <div className="pd-checkout-info">
                                        <h4 className="pd-checkout-name">{this.state.product.name}</h4>
                                        <div className="pd-checkout-details">
                                            {qty !== 0 ? (
                                                <p>{`x${qty}`}</p>
                                            ) : null}
                                            <p>{size} {delivery}</p>
                                        </div>
                                    </div>
                                    <div className="pd-checkout-quantity">
                                        <div className="pd-minus-button" onClick={() => {
                                            if (qty > 0) {
                                                dispatch(counterDown());
                                            }
                                        }}>-</div>
                                        <div className="pd-quantity">{qty}</div>
                                        <div className="pd-plus-button" onClick={() => dispatch(counterUp())}>+</div>
                                    </div>
                                </div>
                                <div className="pd-checkout-button" onClick={this.checkOutHandle}>CHECKOUT</div>
                            </section>
                        </section>
                        </form>
                    ) : null}
                </main>
                <Footer />
            </>
        )
    }
}

const mapStateToProps = (prevState) => {
    const {
        cart: { qty, size, delivery },
    } = prevState;
    return { qty, size, delivery };
}

export default connect(mapStateToProps)(withLocation(withParams(ProductDetail)))